/* 이중 연결 리스트
-이중연결리스트: 단순 연결 리스트에서 선행 노드에 접근하기가 어렵다는 점을 개선하여 원형 연결 리스트를 구성했지만, 원형 연결 리스트에서도
 원형 연결 리스트에서도 현재 노드의 바로 이전 노드에 접근하려면 전체 리스트를 한바퀴 순회해야 하는 문제가 있다.
 이러한 문제는 리스트의 링크가 한 방향으로만 되어있어서 반대 방향으로는 순회할 수 없기 때문에 발생한다. 이런 문제를 개선하여 양쪽 방향으로
 순회할 수 있도록 연결한 리스트를 이중 연결 리스트(Doubly Linked List)라고한다. 이중 연결 리스트의 노드 구조는 "두 개의 링크 필드"와
 "한 개의 데이터 필드"로 구성한다. link(left link)필드는 왼쪽 노드와 연결하는 링크 필드고, rlink(Right Link) 필드는 오른쪽 노드와
  연결하는 링크 필드다.
 
-이중 연결 리스트에서의 삽입 연산
 (1), 삽입할 노드를 가져온다.
 (2), 새 노드의 데이터 필드에 값을 저장한다.
 (3), 새 노드의 왼쪽 노드의 오른쪽 링크(rlink)를 새 노드의 오른쪽 링크(rlink)에 저장한다.
 (4), 그리고 왼쪽 노드의 오른쪽 링크(rlink)에 새 노드의 주소를 저장한다.
 (5), 새 노드의 오른쪽 노드의 왼쪽 링크(llink)를 새 노드의 왼쪽 링크(llink)에 저장한다.
 (6), 그리고 오른쪽 노드의 왼쪽 링크(link)에 새 노드의 주소를 저장한다.
 
 1, 노드 pre의 rlink 값(200)을 노드 new의 rlink에 저장하여 노드 pre의 오른쪽 노드를 
    삽입할 노드 new의 오른쪽 노드로 연결한다. ==> new.rlink <- pre.rlink
 2, 새 노드 new의 참조갑(500)을 노드 pre의 rlink에 저장하여 노드 new를 노드 pre의 오른쪽 노드로 연결한다. ==> pre.rlink <- new
 3, 참조변수 pre의 값(100)을 삽입할 노드 new의 link에 저장하여 노드 pre를 노드 new의 왼쪽노드로 연결한다. ==> new.link <- pre
 4, new의 값(500)을 노드 new의 오른쪽 노드(new.rlink)의 link에 저장하여 노드 new의 
    오른쪽 노드의 왼쪽 노드(new.rlink.llink)로 노드 new를 연결한다. ==> new.rlink.llink <- new
-이중 연결 리스트에서의 삭제 연산
 (1), 삭제할 노드의 오른쪽 노드의 주소(old.rlink)를 삭제할 노드의 왼쪽 노드(old.link)의 오른쪽 링크(rlink)에 저장한다.
 (2), 삭제할 노드의 왼쪽 노드의 주소(old.llink)를 삭제할 노드의 오른쪽 노드(old.rlink)의 왼쪽 링크(llink)에 저장한다.
 (3), 삭제한 노드를 자유 공간 리스트에 반환한다.
 
 1, 삭제할 노드 old의 오른쪽 노드의 참조값(old.rlink, 300)을 노드 old의 왼쪽 노드의 rlink(old.link.rlink)에
    저장하여 노드 old의 오른쪽 노드를 노드 old의 왼쪽 노드의 오른쪽에 연결한다. ==> old.llink.rlink <- old.rlink;
 
 
 
*/




